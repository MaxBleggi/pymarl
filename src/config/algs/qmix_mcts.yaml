# --- QMIX-MCTS specific parameters ---
# Uses a learned model to guide exploration via monte carlo tree search
#

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.05
epsilon_anneal_time: 50000

buffer_size: 5000

# update the target network every {} episodes
target_update_interval: 200

# use the Q_Learner to train
agent_output_type: "q"
learner: "q_learner"
double_q: True
mixer: "qmix"
mixing_embed_dim: 32
hypernet_layers: 2
hypernet_embed: 64

# models
runner: "model_mcts_episode"
model_learner: "model_mcts"
dynamics_model_hidden_dim: 256
representation_model_hidden_dim: 256
actions_model_hidden_dim: 256
policy_model_hidden_dim: 256
reward_model_hidden_dim: 256
term_model_hidden_dim: 256

# model learning params
model_min_samples: 32
model_test_ratio: 0.1
model_learning_rate: 0.01
model_grad_clip_norm: 0.01
model_batch_size: 32
model_intitial_epochs: 1
model_epochs: 1 # per RL step
model_log_epochs: 10
model_timesteps:  # default is to use all available timesteps
model_rollout_timestep_samples: 10

# rollouts
model_rollout_timesteps: # default to max scenario timesteps
model_rollout_batch_size: 256
model_term_threshold: 0.5 # masks termination signal outputs at this threshold
model_action_threshold: 0.5 # # masks available action outputs at this threshold
model_max_rerolls: 1 # number of times to resume search on failure
model_use_search: True

# action selection
model_mac: "model_mac"
model_action_selector: "model_epsilon_greedy"
model_epsilon_start: 1.0
model_epsilon_finish: 0.05
model_epsilon_anneal_time: 50000
model_epsilon_delay: 0

# debug
model_save_val_data: False
#episode_dir: "/home/ubuntu/masters/experiments/model-learning/1/val_data"

name: "qmix-rts-k-max-retries"
